
  4) 关于存盘点(HEAD)
    实现版本的控制
      git中把每一次的提交都会串成一条时间线,这个时间线就是一条分支。默认只有一条分支master,也称之为主分支。
      而HEAD指向的就是当前分支。

  5) 分支
    1. 创建分支
      git branch 分支名
      将当前所在的分支复制一条新的分支出来
    2. 查看当前所有的分支
      git branch
      其中前面有*的表示当前所在分支
    3. 切换分支
      git checkout 分支名称
      在分支上的操作,不会影响其他分支上的数据
    4. 合并分支
      git merge 分支名称
      将指定名称的分支的内容合并到当前分支
      eg:
        在master分支下使用 git merge v1
        将v1的分支的内容合并到master中去,
        master分支的内容发生改变,v1分支内容不会改变
    5. 删除分支
      git branch -d 分支名称
        删除指定分支(不能删除当前所在的分支)
      git branch -D 分支名称
        强制删除未合并的分

    练习:
      1. 删除test文件,重新创建
      2. 初始化仓库,新建1.txt,将1.txt内容修改为abc,提交
      3. 创建分支v1,查看所有分支,切换v1分支
      4. 将1.txt内容修改为123,提交
      5. 切换到master分支,查看1.txt内容是否发生变化
      6. 将v1分支合并到master分支,分别查看master与v1分支中1.txt的内容
      7. 创建v2分支,在v2分支中新建文件2.txt提交
      8. 切换到master分支,查看master中是否有2.txt文件
      9. 删除v1分支


